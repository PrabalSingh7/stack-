402. Remove K Digits
Medium
7.3K
310
Companies
Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.

 

Example 1:

Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.
Example 2:

Input: num = "10200", k = 1
Output: "200"
Explanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.
Example 3:

Input: num = "10", k = 2
Output: "0"
Explanation: Remove all the digits from the number and it is left with nothing which is 0.
 

Constraints:

1 <= k <= num.length <= 105
num consists of only digits.
num does not have any leading zeros except for the zero itself.
Accepted
304.1K
Submissions
994.9K
Acceptance Rate
30.6%



class Solution {
public:
    string removeKdigits(string num, int k) {
        int n = num.size();
        stack<int> st;

        for(int i=0; i<n; i++)  {
            char curr = num[i];

            if(st.size()!=0) {
                while(st.top()>curr && st.size()>0 && k>0)   {
                    st.pop();
                    k--;
                    if(st.size()==0 || k==0)
                        break;
                }
            }

            if(curr=='0')   {
                if(st.size()!=0)    {
                    st.push(curr);
                }
            }
            else {
                st.push(curr);
            }
        }

        string res;
        while(st.size()!=0) {
            if(k>0) {
                k--;
                st.pop();
            }
            else {
                res += st.top();
                st.pop();
            }
        }
        reverse(res.begin(),res.end());

        if(res.size()==0)
            res += '0';
        return res;
    }
};